<!DOCTYPE html> <html lang="es"> <head> <meta charset="UTF-8" /> <meta name="viewport" content="width=device-width, initial-scale=1" /> <title>Callcenter ¬∑ Musicala</title> <!-- Fuente y estilos --> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet"> <!-- Evita caches agresivos mientras iteramos --> <meta http-equiv="Cache-Control" content="no-store, max-age=0" /> <meta name="theme-color" content="#0C41C4" /> <meta name="description" content="Visor de base de datos conectado a Google Sheets v√≠a Apps Script."> <link rel="stylesheet" href="styles.css" /> </head> <body> <header class="app-header"> <div class="brand"> <img src="logo.png" alt="Musicala" class="logo" /> <div> <h1>Callcenter ¬∑ Musicala</h1> <p class="subtitle">Visor de base de datos ‚Äî conectado a Google Sheets</p> </div> </div> <div class="controls"> <label> Hoja <select id="sheetSelect" aria-label="Seleccionar hoja"></select> </label> <input id="search" type="search" placeholder="Buscar en la tabla‚Ä¶" aria-label="Buscar" /> <!-- NUEVO: bot√≥n para crear registro --> <button id="btnNew" class="btn" type="button" title="Crear nuevo cliente">+ Nuevo</button> </div> </header> <main class="container"> <div id="status" class="status"> <span class="spinner" aria-hidden="true">‚è≥</span> Cargando‚Ä¶ </div> <div class="table-wrap" role="region" aria-live="polite"> <table id="dataTable" class="data-table" aria-describedby="status"></table> </div> <!-- Paginaci√≥n --> <div class="pager"> <button id="btnPrev" class="btn" disabled>¬´ Anterior</button> <span id="pageInfo" class="page-info">P√°gina 1</span> <button id="btnNext" class="btn">Siguiente ¬ª</button> <label class="page-size"> Ver <select id="pageSize" aria-label="Tama√±o de p√°gina"> <option value="100">100</option> <option value="200" selected>200</option> <option value="500">500</option> <option value="1000">1000</option> </select> por p√°gina </label> </div> </main> <footer class="app-footer"> <small>Hecho con ‚ô• por Musicala ¬∑ v1</small> </footer> <!-- Modal de detalle/edici√≥n/creaci√≥n --> <div id="clientModal" class="modal hidden" aria-hidden="true"> <div class="modal-backdrop" data-close="1"></div> <div class="modal-dialog" role="dialog" aria-modal="true" aria-labelledby="clientTitle"> <button class="modal-close" type="button" aria-label="Cerrar" data-close="1">√ó</button> <header class="modal-header"> <h2 id="clientTitle">Cliente</h2> <p id="clientSubtitle" class="modal-subtitle"></p> </header> <section id="clientBody" class="modal-body"> <!-- Campos inyectados desde app.js --> </section> <footer class="modal-footer"> <!-- Botones se inyectan desde app.js --> </footer> </div> </div> <!-- Endpoint √öNICO (tu implementaci√≥n /exec) --> <script> window.API_BASE = 'https://script.google.com/macros/s/AKfycby5htUmBsJsqOrxRNGoG_g1iibehTr5BgZXw87037zA3mAPVL77LZuJgjtqj2y5MoIt/exec'; </script> <!-- App --> <script src="app.js"></script> <style> /* spinner simple sin tocar tu styles.css */ .spinner { display:inline-block; animation: spin 1s linear infinite; } @keyframes spin { from { transform: rotate(0deg);} to { transform: rotate(360deg);} } </style> </body> </html> /* ============================= app.js ‚Äî Callcenter Musicala Paginaci√≥n + b√∫squeda + modal editable Actualiza con POST (mode=update) y Crea con POST (mode=add) ============================= */ 'use strict'; (async function () { // ------- DOM ------- const statusEl = document.getElementById('status'); const table = document.getElementById('dataTable'); const sheetSel = document.getElementById('sheetSelect'); const searchBox = document.getElementById('search'); const btnNew = document.getElementById('btnNew'); // Paginaci√≥n const btnPrev = document.getElementById('btnPrev'); const btnNext = document.getElementById('btnNext'); const pageInfo = document.getElementById('pageInfo'); const pageSizeEl = document.getElementById('pageSize'); // Modal const modal = document.getElementById('clientModal'); const modalBody = document.getElementById('clientBody'); const modalTitle = document.getElementById('clientTitle'); const modalSubtitle = document.getElementById('clientSubtitle'); // ------- Config ------- if (!window.API_BASE) throw new Error('No se encontr√≥ window.API_BASE. Define la URL /exec en index.html'); const API_BASE = window.API_BASE; // üîí Forzamos la clave a ser SOLO "ID" const KEY_CANDIDATES = ['ID']; // ====== Cat√°logos (listas fijas) ====== const OPTIONS = { Grupo: ["Musiadultos","Musibabies","Musicalitos","Musigrandes","Musikids","Musiteens"], ARTE: ["M√∫sica","Baile","Artes pl√°sticas","Teatro","Vacacionales","Todos"], Modalidad: [ "Domicilio","Hogar y virtual","Sede","Sede,Virtual y Domicilio", "Sede y Hogar","Virtual","Hogar","Plataforma Online","Sede y Virtual" ], "Curso/Plan": [ "Personalizado","Grupal","Hogar","Virtual","Vacacional", "AutoMusicala","MusiGym","Curso de Formaci√≥n","Preuniversitario", "Grupal y personalizado","Musifamiliar" ], Listado: [ "Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto", "Septiembre","Octubre","Noviembre","Diciembre","2023","2024","Bloqueados", "Sede","Activo","Sin agendar","Clase de Prueba","FESICOL","Vacacionales", "Virtual","A hogar","No interesad@","Otros horarios","Distancia","Inscripci√≥n","No disponible" ], Listado1: [ "Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto", "Septiembre","Octubre","Noviembre","Diciembre","2023","2024","Bloqueados", "Sede","Activo","Sin agendar","Clase de Prueba","FESICOL","Vacacionales", "Virtual","A hogar","No interesad@","Otros horarios","Distancia","Inscripci√≥n","No disponible" ], Asesor: ["Alek Caballero","Catalina Medina","Camila Rodr√≠guez"], "Canal de comunicaci√≥n": ["Llamada","WhatsApp","Keybe","Instagram","Facebook","Wix","TikTok"], Prioridad: ["Alta","Media","Baja"] }; // ====== Dependencias de Instrumento/Estilo/T√©cnica (seg√∫n Arte) ====== const ART_TO_OPTIONS = { "M√∫sica": [ "Piano","Guitarra","Canto","Viol√≠n","Bater√≠a","Cello","Bajo el√©ctrico","Ukelele", "Acorde√≥n","Bandola","Iniciaci√≥n Musical","Teor√≠a","Composici√≥n m√∫sica", "Flauta Dulce","Saxof√≥n","Requinto","Tromb√≥n","Trompeta","Percusi√≥n","Xil√≥fono","Jazz" ], "Baile": [ "Bailes Latinos","Danza cl√°sica y contempor√°nea","Bailes Urbanos","Danzas folcl√≥ricas", "Ballet","Salsa","Bongo" ], "Artes pl√°sticas": [ "Dibujo","Pintura","√ìleo","Plastilina","T√©cnicas mixtas","Exploraci√≥n Art√≠stica","Manualidades" ], "Teatro": ["Teatro"], "Vacacionales": ["Vacacionales"], "Todos": ["Piano","Guitarra","Canto","Viol√≠n","Bater√≠a","Bailes Latinos","Dibujo","Pintura","Teatro","Vacacionales"] }; // Campos Arte / Instrumento por √≠ndice const ARTE_COLS = ["Arte I","Arte II","Arte III"]; const INSTRUMENT_COLS = [ "Instrumento/Estilo/T√©cnica I", "Instrumento/Estilo/T√©cnica II", "Instrumento/Estilo/T√©cnica III" ]; // ------- Estado ------- let currentSheet = ''; let limit = parseInt(pageSizeEl?.value || '200', 10); let offset = 0; let total = 0; let currentHeaders = []; let currentRows = []; let originalRow = null; let keyColumnInUse = ''; // columna clave efectiva de la hoja cargada let creatingNew = false; // bandera "nuevo" /* ============================= 1) Cargar hojas + primera p√°gina ============================= */ const meta = await fetchJSON(${API_BASE}?mode=meta&_ts=${Date.now()}).catch(showError); if (!meta || !Array.isArray(meta.sheets) || meta.sheets.length === 0) { status('No se encontraron hojas.'); return; } sheetSel.innerHTML = meta.sheets .map((n) => <option value="${escAttr(n)}">${esc(n)}</option>) .join(''); const initial = meta.sheets.find((n) => /base de datos general/i.test(n)) || meta.sheets[0]; sheetSel.value = initial; currentSheet = initial; await loadPage(); /* ============================= 2) Eventos UI ============================= */ sheetSel.addEventListener('change', async (e) => { currentSheet = e.target.value; offset = 0; await loadPage(); }); btnPrev?.addEventListener('click', async () => { if (offset <= 0) return; offset = Math.max(0, offset - limit); await loadPage(); }); btnNext?.addEventListener('click', async () => { if (offset + limit >= total) return; offset = offset + limit; await loadPage(); }); pageSizeEl?.addEventListener('change', async () => { limit = parseInt(pageSizeEl.value, 10) || 200; offset = 0; await loadPage(); }); searchBox.addEventListener('input', filterTable); // Nuevo cliente btnNew?.addEventListener('click', () => openNewModal()); // Delegaci√≥n: click en el "Nombre" abre modal de edici√≥n table.addEventListener('click', (e) => { const btn = e.target.closest('.name-link'); if (!btn) return; const idx = Number(btn.dataset.rowindex); const row = currentRows[idx]; if (row) openModal(row); }); // Cerrar modal modal.addEventListener('click', (e) => { if (e.target.dataset.close === '1') closeModal(); }); document.addEventListener('keydown', (e) => { if (e.key === 'Escape') closeModal(); }); /* ============================= 3) L√≥gica de datos ============================= */ async function loadPage() { status(Cargando ‚Äú${currentSheet}‚Äù‚Ä¶); const url = ${API_BASE}?mode=data&sheet=${encodeURIComponent(currentSheet)}&limit=${limit}&offset=${offset}&_ts=${Date.now()}; const res = await fetchJSON(url).catch(showError); if (!res || !Array.isArray(res.headers)) { status('Error cargando datos.'); return; } currentHeaders = res.headers; currentRows = res.rows || []; total = parseInt(res.total || 0, 10); // üëá Forzar que la clave sea ID keyColumnInUse = pickKeyColumn(currentHeaders); if (!keyColumnInUse) { status('‚ö†Ô∏è Esta hoja no tiene columna "ID". Ver√°s datos, pero no podr√°s guardar cambios.'); } else { status(Listo. Clave: ‚Äú${keyColumnInUse}‚Äù. Mostrando ${currentRows.length.toLocaleString()} de ${total.toLocaleString()} registros.); } renderTable(currentHeaders, currentRows); const page = Math.floor(offset / limit) + 1; const pages = Math.max(1, Math.ceil(total / limit)); if (pageInfo) { pageInfo.textContent = P√°gina ${page.toLocaleString()} de ${pages.toLocaleString()} ‚Äî ${total.toLocaleString()} registros; } if (btnPrev) btnPrev.disabled = offset <= 0; if (btnNext) btnNext.disabled = offset + limit >= total; filterTable(); } function renderTable(headers, rows) { const nameIdx = headers.findIndex((h) => h.trim().toLowerCase() === 'nombre'); const thead = <thead><tr>${ headers.map((h) => <th>${esc(h)}</th>).join('') }</tr></thead>; const tbody = <tbody>${ rows.map((r, i) => { const tds = headers.map((h, colIdx) => { const val = r[h]; if (colIdx === nameIdx) { const label = (val == null || String(val).trim() === '') ? '(Sin nombre)' : String(val); return <td><button class="linkish name-link" data-rowindex="${i}">${esc(label)}</button></td>; } return <td>${pretty(val)}</td>; }).join(''); return <tr>${tds}</tr>; }).join('') }</tbody>; table.innerHTML = thead + tbody; const pxPerCol = 140; table.style.minWidth = (headers.length * pxPerCol) + 'px'; } /* ============================= 4) Modales ============================= */ // Abre modal para fila existente (editar) function openModal(row) { creatingNew = false; buildModal(row); } // Abre modal vac√≠o para crear function openNewModal() { creatingNew = true; // objeto vac√≠o con todos los headers conocidos const empty = {}; currentHeaders.forEach(h => empty[h] = ''); // ‚ùå Ya no generamos ID temporal; lo pondr√° tu script/flujo en Sheets // if (currentHeaders.includes('ID')) { empty['ID'] = genId(); } // defaults opcionales const monthName = new Intl.DateTimeFormat('es-CO', { month: 'long' }).format(new Date()); const capital = (s)=> s.charAt(0).toUpperCase() + s.slice(1); if (currentHeaders.includes('Listado1') && !empty['Listado1']) empty['Listado1'] = capital(monthName); if (currentHeaders.includes('Listado') && !empty['Listado']) empty['Listado'] = capital(monthName); buildModal(empty, true); } // Construye el contenido del modal (se usa para editar y crear) function buildModal(row, isNew = false) { originalRow = isNew ? null : { ...row }; const nombre = String(row['Nombre'] ?? '').trim() || (isNew ? 'Nuevo cliente' : 'Cliente'); modalTitle.textContent = nombre; const canal = String(row['Canal de comunicaci√≥n'] ?? '').trim(); const grupo = String(row['Grupo'] ?? '').trim(); const arte1 = String(row['Arte I'] ?? '').trim(); modalSubtitle.textContent = [grupo, arte1, canal].filter(Boolean).join(' ¬∑ '); const preferredOrder = [ 'ID','Listado1','Listado','Nombre','Celular/Tel√©fono','Correo Electr√≥nico','Acudiente/Estudiante','Nombre de Estudiante', 'Grupo','Edad', 'Arte I','Instrumento/Estilo/T√©cnica I', 'Arte II','Instrumento/Estilo/T√©cnica II', 'Arte III','Instrumento/Estilo/T√©cnica III', 'Modalidad','Curso/Plan','Ubicaci√≥n','Fecha para contactar','Fecha y hora de contacto','Asesor','Comentario', '¬øTiene el instrumento?','Canal de comunicaci√≥n','Prioridad' ]; const headers = orderHeaders(currentHeaders, preferredOrder); modalBody.innerHTML = headers.map((h) => { const raw = row[h] ?? ''; const id = f_${slug(h)}; const headerName = String(h); const isLong = /comentario|ubicaci√≥n|direccion|direcci√≥n/i.test(headerName); const arteIdx = ARTE_COLS.indexOf(headerName); const instIdx = INSTRUMENT_COLS.indexOf(headerName); let input; // üîí ID bloqueado siempre if (headerName === 'ID') { input = <input id="${id}" name="${escAttr(h)}" class="in control" type="text" value="${escAttr(String(raw))}" readonly data-lock="1" />; // Selects fijos } else if (OPTIONS[headerName]) { const opts = OPTIONS[headerName]; input = selectHTML(id, h, opts, String(raw), !isNew); // Arte I/II/III } else if (arteIdx !== -1) { input = selectHTML(id, h, OPTIONS.ARTE, String(raw), !isNew, { role:'arte', idx: arteIdx }); // Instrumento dependiente } else if (instIdx !== -1) { const arteHeader = ARTE_COLS[instIdx]; const currentArteVal = String(row[arteHeader] || '').trim(); const opts = currentArteVal ? (ART_TO_OPTIONS[currentArteVal] || ART_TO_OPTIONS['Todos']) : []; input = selectHTML(id, h, opts, String(raw), !isNew, { role:'instrumento', idx: instIdx }); // Fechas } else if (isDateHeader(headerName)) { const type = /hora/i.test(headerName) ? 'datetime-local' : 'date'; const iso = toInputDateValue(String(raw), type); input = <input id="${id}" name="${escAttr(h)}" class="in control" type="${type}" value="${escAttr(iso)}" ${!isNew ? 'disabled' : ''} />; // Textos largos } else if (isLong) { input = <textarea id="${id}" name="${escAttr(h)}" class="in control" rows="3" ${!isNew ? 'readonly' : ''}>${esc(String(raw))}</textarea>; // Resto } else { input = <input id="${id}" name="${escAttr(h)}" class="in control" type="text" value="${escAttr(String(raw))}" ${!isNew ? 'readonly' : ''} />; } return <div class="field"> <div class="label">${esc(h)}</div> <div class="value">${input}</div> </div>; }).join(''); const footer = modal.querySelector('.modal-footer'); footer.innerHTML = <span id="saveStatus" class="muted"></span> <div style="margin-left:auto; display:flex; gap:.5rem;"> ${isNew ? '' : '<button id="btnEdit" class="btn">Editar</button>'} <button id="btnSave" class="btn">${isNew ? 'Crear' : 'Guardar'}</button> <button class="btn" data-close="1">Cerrar</button> </div>; const btnEdit = document.getElementById('btnEdit'); const btnSave = document.getElementById('btnSave'); const saveStatus = document.getElementById('saveStatus'); // En modo edici√≥n (fila existente), primero hay que habilitar if (btnEdit) { btnSave.disabled = true; btnEdit.addEventListener('click', () => { modalBody.querySelectorAll('.control').forEach((el) => { if (el.dataset.lock === '1') return; // üëà no tocar ID el.removeAttribute('readonly'); el.removeAttribute('disabled'); }); btnSave.disabled = false; // Dependencias ArteX -> InstrumentoX wireArteDependencies(); }); } else { // En modo nuevo, los campos ya est√°n habilitados wireArteDependencies(); } // Guardar (crear o actualizar) btnSave.addEventListener('click', async () => { try { btnSave.disabled = true; saveStatus.textContent = creatingNew ? 'Creando‚Ä¶' : 'Guardando‚Ä¶'; const formValues = {}; modalBody.querySelectorAll('.control').forEach((el) => { const header = el.getAttribute('name'); formValues[header] = el.value ?? ''; }); if (creatingNew) { // ‚úÖ Ya no exigimos ID aqu√≠; tu flujo de ID lo puede a√±adir en la hoja const body = new URLSearchParams({ mode: 'add', sheet: currentSheet, row: JSON.stringify(formValues) }); const r = await fetch(API_BASE, { method:'POST', headers:{Accept:'application/json'}, body }); let json = null, txt = ''; try { json = await r.json(); } catch (_) { txt = await r.text(); } if (!r.ok || json?.ok !== true) { const msg = (json && json.error) || txt || HTTP ${r.status}; throw new Error(msg); } saveStatus.textContent = 'Creado ‚úì'; await loadPage(); closeModal(); return; } // ----- EDICI√ìN EXISTENTE ----- const changes = diffObject(originalRow, formValues); // Nunca enviar cambios sobre ID delete changes['ID']; if (!Object.keys(changes).length) { saveStatus.textContent = 'Sin cambios'; btnSave.disabled = false; return; } if (!keyColumnInUse) throw new Error('No hay columna clave disponible en esta hoja.'); const key = String(formValues[keyColumnInUse] ?? '').trim(); if (!key) { saveStatus.textContent = Falta valor en la columna clave: ${keyColumnInUse}; btnSave.disabled = false; return; } const body = new URLSearchParams({ mode: 'update', sheet: currentSheet, keyCol: keyColumnInUse, key, // ‚ùå No enviamos upsert para evitar que inserte si no encuentra row: JSON.stringify(changes) }); const r = await fetch(API_BASE, { method:'POST', headers:{Accept:'application/json'}, body }); let json = null, txt = ''; try { json = await r.json(); } catch (_) { txt = await r.text(); } if (!r.ok || json?.ok !== true) { const msg = (json && json.error) || txt || HTTP ${r.status}; throw new Error(msg); } saveStatus.textContent = 'Guardado ‚úì'; await loadPage(); closeModal(); } catch (err) { console.error(err); saveStatus.textContent = Error: ${err?.message || err}; btnSave.disabled = false; } }); modal.classList.remove('hidden'); modal.setAttribute('aria-hidden', 'false'); document.body.classList.add('modal-open'); modal.querySelector('.modal-close')?.focus(); } function closeModal() { modal.classList.add('hidden'); modal.setAttribute('aria-hidden', 'true'); document.body.classList.remove('modal-open'); originalRow = null; creatingNew = false; } // Vincula cambios de ArteX -> repuebla InstrumentoX function wireArteDependencies(){ modalBody.querySelectorAll('select[data-role="arte"]').forEach((arteSel) => { const idx = Number(arteSel.getAttribute('data-idx') || '0'); arteSel.addEventListener('change', () => { const arte = arteSel.value || ''; const newOpts = arte ? (ART_TO_OPTIONS[arte] || ART_TO_OPTIONS['Todos']) : []; const instSel = modalBody.querySelector(select[data-role="instrumento"][data-idx="${idx}"]); if (!instSel) return; const prev = instSel.value; instSel.innerHTML = selectOptionsHTML(newOpts, ''); if (newOpts.includes(prev)) instSel.value = prev; }); }); } /* ============================= 5) Utilidades ============================= */ function filterTable() { const q = searchBox.value.trim().toLowerCase(); table.querySelectorAll('tbody tr').forEach((tr) => { tr.style.display = !q || tr.textContent.toLowerCase().includes(q) ? '' : 'none'; }); } function pickKeyColumn(headers) { // Solo aceptamos "ID" como clave return headers.includes('ID') ? 'ID' : ''; } // (Dejado por si en alg√∫n momento se quiere otro generador) function genId(){ return 'ID-' + Date.now().toString(36) + '-' + Math.random().toString(36).slice(2,6).toUpperCase(); } function status(msg) { statusEl.textContent = msg; } function showError(err) { status(‚ö†Ô∏è ${err?.message || err}); console.error(err); } async function fetchJSON(url) { const r = await fetch(url, { headers: { Accept: 'application/json' } }); if (!r.ok) throw new Error(HTTP ${r.status}); return r.json(); } function esc(s) { return String(s ?? '').replace(/[&<>\"']/g, (c) => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;','\'':'&#39;'}[c]) ); } function escAttr(s){ return String(s ?? '').replace(/"/g,'&quot;'); } function pretty(v) { if (v == null || v === '') return ''; const s = String(v); if (/^m√∫sica$/i.test(s)) return <span class="badge music">${esc(s)}</span>; if (/^(baile|danza)$/i.test(s)) return <span class="badge dance">${esc(s)}</span>; if (/^artes?\s?pl√°sticas$/i.test(s)) return <span class="badge arts">${esc(s)}</span>; if (/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(s)) return <a href="mailto:${escAttr(s)}">${esc(s)}</a>; return esc(s); } function slug(h) { return String(h).toLowerCase() .normalize('NFD').replace(/\p{Diacritic}/gu,'') .replace(/[^a-z0-9]+/g,'-'); } function diffObject(prev, next) { const out = {}; const keys = new Set([...Object.keys(prev||{}), ...Object.keys(next||{})]); keys.forEach((k) => { const a = String(prev?.[k] ?? ''); const b = String(next?.[k] ?? ''); if (a !== b) out[k] = next[k]; }); return out; } function orderHeaders(all, preferred) { const seen = new Set(); const first = preferred.filter((h) => all.includes(h) && !seen.has(h) && seen.add(h)); const rest = all.filter((h) => !seen.has(h)); return [...first, ...rest]; } // --- Dates helpers --- function isDateHeader(h){ return /fecha/i.test(h); } function toInputDateValue(raw, type){ const s = String(raw || '').trim(); if (!s) return ''; const m = s.match(/^(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2,4})(?:[ T](\d{1,2}):(\d{2}))?$/); if (m){ const dd = String(m[1]).padStart(2,'0'); const mm = String(m[2]).padStart(2,'0'); let yyyy = m[3].length === 2 ? ('20' + m[3]) : m[3]; const date = ${yyyy}-${mm}-${dd}; if (type === 'datetime-local' && m[4] && m[5]){ const hh = String(m[4]).padStart(2,'0'); const mi = String(m[5]).padStart(2,'0'); return ${date}T${hh}:${mi}; } return date; } if (/^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2})?$/.test(s)) return s; return s; } // --- Select helpers con placeholder --- function selectHTML(id, header, options, current, disabled, dataAttrs){ const attrs = [ id="${id}", name="${escAttr(header)}", class="in control", disabled ? 'disabled' : '' ]; if (dataAttrs && dataAttrs.role) attrs.push(data-role="${dataAttrs.role}"); if (dataAttrs && dataAttrs.idx != null) attrs.push(data-idx="${String(dataAttrs.idx)}"); const html = [ <select ${attrs.join(' ')}>, selectOptionsHTML(options, current), </select> ].join(''); return html; } function selectOptionsHTML(options, current){ const hasCurrent = current && options.includes(current); const optHtml = options.map(opt => <option value="${escAttr(opt)}" ${opt===current?'selected':''}>${esc(opt)}</option> ).join(''); return [ <option value="" ${(!current || !hasCurrent) ? 'selected' : ''}>‚Äî Selecciona ‚Äî</option>, optHtml ].join(''); } })(); /* ============================= styles.css ‚Äî Callcenter Musicala ============================= */ :root { /* Colores principales */ --azul-mozart: #0C41C4; --violeta-beethoven: #680DBF; --magenta-brahms: #CE0071; /* Secundarios */ --azul-wagner: #0C0A1E; --gris-haydn: #E6E8E8; --blanco-debussy: #F9F9F9; /* UI */ --ink: #111827; --muted: #6b7280; --bg: var(--blanco-debussy); --card: #ffffff; --line: #e5e7eb; } * { box-sizing: border-box; } html, body { height: 100%; } body { margin: 0; font-family: 'Inter', system-ui, Segoe UI, Roboto, Helvetica, Arial, sans-serif; color: var(--ink); background: var(--bg); } /* ===== Header ===== */ .app-header{ display:flex; align-items:center; justify-content:space-between; gap:1rem; padding:1rem clamp(1rem, 2vw, 2rem); border-bottom:1px solid var(--line); background:linear-gradient(90deg, var(--azul-mozart) 0%, var(--violeta-beethoven) 100%); color:#fff; } .brand{ display:flex; align-items:center; gap:1rem; } .logo{ width:44px; height:44px; object-fit:contain; filter:drop-shadow(0 1px 1px rgba(0,0,0,.15)); } .app-header h1{ margin:0; font-size:1.25rem; font-weight:700; } .subtitle{ margin:.25rem 0 0; font-size:.9rem; opacity:.9; } /* ===== Controles ===== */ .controls{ display:flex; align-items:flex-end; gap:.75rem; flex-wrap:wrap; } .controls label{ font-size:.85rem; display:flex; flex-direction:column; gap:.25rem; } .controls select,.controls input{ border:1px solid #cdd2e1; background:#fff; color:#111827; border-radius:.6rem; padding:.55rem .8rem; min-width:220px; outline:none; box-shadow:0 1px 2px rgba(0,0,0,.04); } .controls input{ min-width:260px; } /* ===== Main ===== */ .container{ padding:1rem clamp(1rem, 2vw, 2rem); } .status{ margin:.5rem 0 1rem; color:var(--muted); font-size:.95rem; } /* La tabla ahora puede hacer scroll horizontal si hay muchas columnas */ .table-wrap{ background:var(--card); border:1px solid var(--line); border-radius:1rem; overflow-x:auto; /* üëà scroll horizontal */ overflow-y:hidden; box-shadow:0 6px 24px rgba(12,65,196,.08); } /* ===== Tabla ===== */ .data-table{ width:100%; border-collapse:separate; border-spacing:0; table-layout:auto; } /* Evita que los encabezados se partan en muchas l√≠neas */ .data-table thead th{ position:sticky; top:0; z-index:1; background:#fff; color:#111827; text-align:left; font-weight:700; padding:.85rem .9rem; border-bottom:2px solid var(--line); white-space:nowrap; /* üëà mantiene el header en una l√≠nea */ } /* Ancho m√≠nimo por celda para forzar el scroll horizontal si faltan p√≠xeles */ .data-table th, .data-table td{ min-width:140px; /* üëà ajusta si quieres columnas m√°s compactas */ } .data-table tbody td{ padding:.7rem .9rem; border-bottom:1px solid var(--line); vertical-align:top; } .data-table tbody tr:hover{ background:#fafbff; } /* ===== Badges ===== */ .badge{ display:inline-flex; align-items:center; padding:.2rem .5rem; border-radius:999px; font-size:.75rem; font-weight:600; } .badge.music{ background:rgba(12,65,196,.08); color:var(--azul-mozart); } .badge.dance{ background:rgba(206,0,113,.08); color:var(--magenta-brahms); } .badge.arts{ background:rgba(104,13,191,.08); color:var(--violeta-beethoven); } /* ===== Footer ===== */ .app-footer{ padding:1rem; text-align:center; color:var(--muted); } /* ===== Paginaci√≥n ===== */ .pager{ display:flex; align-items:center; gap:.75rem; justify-content:flex-end; padding:.75rem 0 0; } .pager .btn{ border:1px solid var(--line); background:#fff; border-radius:.6rem; padding:.5rem .8rem; cursor:pointer; box-shadow:0 1px 2px rgba(0,0,0,.04); } .pager .btn[disabled]{ opacity:.5; cursor:not-allowed; } .page-size{ display:flex; align-items:center; gap:.35rem; margin-left:.5rem; } /* ===== Enlace-bot√≥n en tabla (Nombre) ===== */ .linkish{ background:none; border:none; padding:0; margin:0; color:var(--azul-mozart); font-weight:600; cursor:pointer; } .linkish:hover{ text-decoration:underline; } /* ===== Modal ===== */ /* Bloquear scroll del fondo cuando el modal est√° abierto */ body.modal-open{ overflow:hidden; } .modal.hidden{ display:none; } .modal{ position:fixed; inset:0; z-index:50; } .modal-backdrop{ position:absolute; inset:0; background:rgba(2,6,23,.45); backdrop-filter:blur(2px); } /* Di√°logo con altura m√°xima; el body del modal scrollea */ .modal-dialog{ position:relative; margin:5vh auto; max-width:min(920px, 92vw); max-height:90vh; background:#fff; border-radius:14px; box-shadow:0 20px 60px rgba(12,65,196,.25); border:1px solid var(--line); display:flex; flex-direction:column; overflow:hidden; } .modal-close{ position:absolute; top:.6rem; right:.8rem; background:#fff; border:1px solid var(--line); border-radius:10px; width:32px; height:32px; font-size:18px; line-height:30px; cursor:pointer; box-shadow:0 1px 2px rgba(0,0,0,.06); } .modal-header{ padding:1rem 1.25rem; background:linear-gradient(90deg, var(--azul-mozart), var(--violeta-beethoven)); color:#fff; flex:0 0 auto; } .modal-header h2{ margin:0 0 .25rem 0; font-size:1.3rem; } .modal-subtitle{ margin:0; opacity:.85; } /* Cuerpo del modal con scroll interno */ .modal-body{ flex:1 1 auto; min-height:0; overflow:auto; padding:1rem 1.25rem 0 1.25rem; display:grid; grid-template-columns:repeat(12, 1fr); gap:.9rem 1rem; } .field{ grid-column:span 6; background:#fff; border:1px solid var(--line); border-radius:10px; padding:.7rem .8rem; } @media (max-width:720px){ .field{ grid-column:1 / -1; } } .field .label{ font-size:.75rem; color:var(--muted); margin-bottom:.25rem; } .field .value{ font-size:.95rem; color:var(--ink); word-break:break-word; } .modal-footer{ padding:.9rem 1.25rem 1.1rem; display:flex; justify-content:flex-end; gap:.5rem; border-top:1px solid var(--line); background:#fafbff; flex:0 0 auto; } .in { width: 100%; border: 1px solid var(--line); border-radius: 10px; padding: .6rem .7rem; font: inherit; background: #fff; } .in[readonly] { background: #fff; border-color: var(--line); } .muted { color: var(--muted); font-size: .9rem; } .btn { border:1px solid var(--line); background:#fff; border-radius:.6rem; padding:.5rem .8rem; cursor:pointer; } .btn:disabled{ opacity:.5; cursor:not-allowed; }
